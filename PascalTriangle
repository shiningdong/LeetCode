import java.util.ArrayList;
import java.util.List;

public class PascalTriangle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(getRow(3).toString());
		System.out.println(generate(25).toString());
	}
	
	// Pascal's Triangle II
	public static List<Integer> getRow(int rowIndex) {
		if(rowIndex==0) {
            List<Integer> ans = new ArrayList<Integer>();
            ans.add(1);
            return ans;
        }
        List<Integer> lastRow = getRow(rowIndex-1);
        List<Integer> ans = new ArrayList<Integer>();
        for(int i=0; i<=rowIndex; i++) {
            if(i>0 && i<rowIndex)
                ans.add(lastRow.get(i-1) + lastRow.get(i));
            else
                ans.add(1);
        }
        return ans;
    }
	
	// Pascal's Triangle I
	public static List<List<Integer>> generate(int numRows) {
		if(numRows==0)
			return new ArrayList<List<Integer>>();
        if(numRows==1) {
        	List<Integer> lastRow = new ArrayList<Integer>();
        	lastRow.add(1);
        	List<List<Integer>> ans = new ArrayList<List<Integer>>();
        	ans.add(lastRow);
        	return ans;
        }
        else {
        	List<List<Integer>> ans = generate(numRows-1);
        	List<Integer> lastRow = ans.get(numRows-2);
        	List<Integer> thisRow = new ArrayList<Integer>();
        	for(int i=0; i<numRows; i++) {
        		if(i>0 && i<numRows-1)
        			thisRow.add(lastRow.get(i-1) + lastRow.get(i));
        		else
        			thisRow.add(1);
        	}
        	ans.add(thisRow);
        	return ans;
        }
    }

}
